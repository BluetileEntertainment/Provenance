openapi: 3.0.1
info:
  title: TheGamesDB API
  description: API Documentation
  license:
    name: GNU General Public License v3.0
    url: https://github.com/TheGamesDB/TheGamesDBv2/blob/master/LICENSE
  version: 2.0.0
servers:
- url: https://api.thegamesdb.net/
tags:
- name: Games
- name: Platforms
- name: Genres
- name: Developers
- name: Publishers
paths:
  /v1/Games/ByGameID:
    get:
      tags:
      - Games
      summary: Fetch game(s) by id
      description: can request additional information can be requestes through `fields`
        and `include` params
      operationId: GamesByGameID
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: id
        in: query
        description: "(Required) - supports `,` delimited list"
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: "(Optional) - valid `,` delimited options: `players`, `publishers`,\
          \ `genres`, `overview`, `last_updated`, `rating`, `platform`, `coop`, `youtube`,\
          \ `os`, `processor`, `ram`, `hdd`, `video`, `sound`, `alternates`"
        schema:
          type: string
      - name: include
        in: query
        description: "(Optional) - valid `,` delimited options: `boxart`, `platform`"
        schema:
          type: string
      - name: page
        in: query
        description: (Optional) - results page offset to return
        schema:
          type: integer
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesByGameID'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Games/ByGameName:
    get:
      tags:
      - Games
      summary: Fetch game(s) by name
      description: can request additional information can be requestes through `fields`
        and `include` params
      operationId: GamesByGameName_v1
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: (Required) - Search term
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: "(Optional) - valid `,` delimited options: `players`, `publishers`,\
          \ `genres`, `overview`, `last_updated`, `rating`, `platform`, `coop`, `youtube`,\
          \ `os`, `processor`, `ram`, `hdd`, `video`, `sound`, `alternates`"
        schema:
          type: string
      - name: "filter[platform]"
        in: query
        description: "(Optional) - platform `id` can be obtain from the platforms\
          \ api below, supports `,` delimited list"
        schema:
          type: string
      - name: include
        in: query
        description: "(Optional) - valid `,` delimited options: `boxart`, `platform`"
        schema:
          type: string
      - name: page
        in: query
        description: (Optional) - results page offset to return
        schema:
          type: integer
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesByGameID_v1'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1.1/Games/ByGameName:
    get:
      tags:
      - Games
      summary: Fetch game(s) by name
      description: can request additional information can be requestes through `fields`
        and `include` params
      operationId: GamesByGameName
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: (Required) - Search term
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: "(Optional) - valid `,` delimited options: `players`, `publishers`,\
          \ `genres`, `overview`, `last_updated`, `rating`, `platform`, `coop`, `youtube`,\
          \ `os`, `processor`, `ram`, `hdd`, `video`, `sound`, `alternates`"
        schema:
          type: string
      - name: "filter[platform]"
        in: query
        description: "(Optional) - platform `id` can be obtain from the platforms\
          \ api below, supports `,` delimited list"
        schema:
          type: string
      - name: include
        in: query
        description: "(Optional) - valid `,` delimited options: `boxart`, `platform`"
        schema:
          type: string
      - name: page
        in: query
        description: (Optional) - results page offset to return
        schema:
          type: integer
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesByGameID'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Games/ByPlatformID:
    get:
      tags:
      - Games
      summary: Fetch game(s) by platform id
      description: can request additional information can be requested through `fields`
        and `include` params
      operationId: GamesByPlatformID
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: id
        in: query
        description: "(Required) - platform `id` can be obtain from the platforms\
          \ api below, supports `,` delimited list"
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: "(Optional) - valid `,` delimited options: `players`, `publishers`,\
          \ `genres`, `overview`, `last_updated`, `rating`, `platform`, `coop`, `youtube`,\
          \ `os`, `processor`, `ram`, `hdd`, `video`, `sound`, `alternates`"
        schema:
          type: string
      - name: include
        in: query
        description: "(Optional) - valid `,` delimited options: `boxart`, `platform`"
        schema:
          type: string
      - name: page
        in: query
        description: (Optional) - results page offset to return
        schema:
          type: integer
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesByGameID'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Games/Images:
    get:
      tags:
      - Games
      summary: Fetch game(s) images by game(s) id
      description: "results can be filtered with `filter[type]` param"
      operationId: GamesImages
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: games_id
        in: query
        description: "(Required) - game(s) `id` can be obtain from the above games\
          \ api, supports `,` delimited list"
        required: true
        schema:
          type: string
      - name: "filter[type]"
        in: query
        description: "(Optional) - valid `,` delimited options: `fanart`, `banner`,\
          \ `boxart`, `screenshot`, `clearlogo`, `titlescreen`"
        schema:
          type: string
      - name: page
        in: query
        description: (Optional) - results page offset to return
        schema:
          type: integer
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesImages'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Games/Updates:
    get:
      tags:
      - Games
      summary: Fetch games update
      operationId: GamesUpdates
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: last_edit_id
        in: query
        description: (Required)
        required: true
        schema:
          type: integer
      - name: time
        in: query
        description: (Optional)
        schema:
          type: integer
      - name: page
        in: query
        description: (Optional) - results page offset to return
        schema:
          type: integer
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesUpdates'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Platforms:
    get:
      tags:
      - Platforms
      summary: Fetch platforms list
      operationId: Platforms
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: "(Optional) - valid `,` delimited options: `icon`, `console`,\
          \ `controller`, `developer`, `manufacturer`, `media`, `cpu`, `memory`, `graphics`,\
          \ `sound`, `maxcontrollers`, `display`, `overview`, `youtube`"
        schema:
          type: string
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Platforms'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Platforms/ByPlatformID:
    get:
      tags:
      - Platforms
      summary: Fetch platforms list by id
      operationId: PlatformsByPlatformID
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: id
        in: query
        description: "(Required) - supports `,` delimited list"
        required: true
        schema:
          type: integer
      - name: fields
        in: query
        description: "(Optional) - valid `,` delimited options: `icon`, `console`,\
          \ `controller`, `developer`, `manufacturer`, `media`, `cpu`, `memory`, `graphics`,\
          \ `sound`, `maxcontrollers`, `display`, `overview`, `youtube`"
        schema:
          type: string
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformsByPlatformID'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Platforms/ByPlatformName:
    get:
      tags:
      - Platforms
      summary: Fetch platforms by name
      operationId: PlatformsByPlatformName
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: "(Optional) - valid `,` delimited options: `icon`, `console`,\
          \ `controller`, `developer`, `manufacturer`, `media`, `cpu`, `memory`, `graphics`,\
          \ `sound`, `maxcontrollers`, `display`, `overview`, `youtube`"
        schema:
          type: string
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformsByPlatformName'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Platforms/Images:
    get:
      tags:
      - Platforms
      summary: Fetch platform(s) images by platform(s) id
      description: "results can be filtered with `filter[type]` param"
      operationId: PlatformsImages
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      - name: platforms_id
        in: query
        description: "(Required) - platform(s) `id` can be obtain from the above platforms\
          \ api, supports `,` delimited list"
        required: true
        schema:
          type: string
      - name: "filter[type]"
        in: query
        description: "(Optional) - valid `,` delimited options: `fanart`, `banner`,\
          \ `boxart`"
        schema:
          type: string
      - name: page
        in: query
        description: (Optional) - results page offset to return
        schema:
          type: integer
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformsImages'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Genres:
    get:
      tags:
      - Genres
      summary: Fetch Genres list
      operationId: Genres
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genres'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Developers:
    get:
      tags:
      - Developers
      summary: Fetch Developers list
      operationId: Developers
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developers'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
  /v1/Publishers:
    get:
      tags:
      - Publishers
      summary: Fetch Publishers list
      operationId: Publishers
      parameters:
      - name: apikey
        in: query
        description: (Required)
        required: true
        schema:
          type: string
      responses:
        "200":
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publishers'
        "400":
          description: bad input parameter
          content: {}
        "403":
          description: bad API key or hit rate-limit cap
          content: {}
components:
  schemas:
    BaseApiResponse:
      required:
      - code
      - extra_allowance
      - remaining_monthly_allowance
      - status
      type: object
      properties:
        code:
          minimum: 0
          type: integer
        status:
          type: string
        remaining_monthly_allowance:
          minimum: 0
          type: integer
        extra_allowance:
          minimum: 0
          type: integer
      example:
        code: 200
        status: Success
        remaining_monthly_allowance: 257
        extra_allowance: 0
    PaginatedApiResponse:
      allOf:
      - $ref: '#/components/schemas/BaseApiResponse'
      - required:
        - pages
        type: object
        properties:
          pages:
            required:
            - current
            - next
            - previous
            type: object
            properties:
              previous:
                type: string
              current:
                type: string
              next:
                type: string
            example:
              previous: ""
              current: https://api.thegamesdb.net/Games/ByGameID?apikey=APIKEY&id=1%2C2%2C3%2C4&fields=players%2Cpublishers%2Cgenres%2Coverview%2Clast_updated%2Crating%2Cplatform%2Ccoop%2Cyoutube%2Cos%2Cprocessor%2Cram%2Chdd%2Cvideo%2Csound%2Calternates&include=boxart%2Cplatform&page=1
              next: ""
    GamesByGameID:
      allOf:
      - $ref: '#/components/schemas/PaginatedApiResponse'
      - required:
        - data
        - include
        type: object
        properties:
          data:
            required:
            - count
            - games
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              games:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
          include:
            required:
            - boxart
            - platform
            type: object
            properties:
              boxart:
                required:
                - base_url
                - data
                type: object
                properties:
                  base_url:
                    $ref: '#/components/schemas/ImageBaseUrlMeta'
                  data:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        $ref: '#/components/schemas/GameImage'
              platform:
                required:
                - data
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/PlatformSkinny'
    GamesByGameID_v1:
      allOf:
      - $ref: '#/components/schemas/PaginatedApiResponse'
      - required:
        - data
        - include
        type: object
        properties:
          data:
            required:
            - count
            - games
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              games:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
          include:
            required:
            - boxart
            - platform
            type: object
            properties:
              boxart:
                required:
                - base_url
                - data
                type: object
                properties:
                  base_url:
                    $ref: '#/components/schemas/ImageBaseUrlMeta'
                  data:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        $ref: '#/components/schemas/GameImage'
              platform:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PlatformSkinny'
    GamesImages:
      allOf:
      - $ref: '#/components/schemas/PaginatedApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - base_url
            - count
            - images
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              base_url:
                $ref: '#/components/schemas/ImageBaseUrlMeta'
              images:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/GameImage'
    GamesUpdates:
      allOf:
      - $ref: '#/components/schemas/PaginatedApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - count
            - updates
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              updates:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateModel'
    Platforms:
      allOf:
      - $ref: '#/components/schemas/BaseApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - count
            - platforms
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              platforms:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Platform'
    PlatformsByPlatformID:
      allOf:
      - $ref: '#/components/schemas/BaseApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - count
            - platforms
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              platforms:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Platform'
    PlatformsByPlatformName:
      allOf:
      - $ref: '#/components/schemas/BaseApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - count
            - platforms
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              platforms:
                type: array
                items:
                  $ref: '#/components/schemas/Platform'
    PlatformsImages:
      allOf:
      - $ref: '#/components/schemas/PaginatedApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - base_url
            - count
            - images
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              base_url:
                $ref: '#/components/schemas/ImageBaseUrlMeta'
              images:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/PlatformImage'
    Genres:
      allOf:
      - $ref: '#/components/schemas/BaseApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - count
            - genres
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              genres:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Genre'
    Developers:
      allOf:
      - $ref: '#/components/schemas/BaseApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - count
            - developers
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              developers:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Developer'
    Publishers:
      allOf:
      - $ref: '#/components/schemas/BaseApiResponse'
      - required:
        - data
        type: object
        properties:
          data:
            required:
            - count
            - publishers
            type: object
            properties:
              count:
                minimum: 0
                type: integer
              publishers:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Publisher'
    Publisher:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        name:
          type: string
      example:
        id: 2374
        name: .GEARS Studios
    Game:
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        game_title:
          type: string
        release_date:
          type: string
        platform:
          minimum: 0
          type: integer
        players:
          minimum: 0
          type: integer
        overview:
          type: string
        last_updated:
          type: string
        rating:
          type: string
        coop:
          type: string
        youtube:
          type: string
        os:
          type: string
        processor:
          type: string
        ram:
          type: string
        hdd:
          type: string
        video:
          type: string
        sound:
          type: string
        developers:
          type: array
          items:
            minimum: 0
            type: integer
        genres:
          type: array
          items:
            minimum: 0
            type: integer
        publishers:
          type: array
          items:
            minimum: 0
            type: integer
        alternates:
          type: array
          items:
            type: string
      example:
        id: 4
        game_title: Star Fox 64
        release_date: 1997-06-30
        platform: 3
        players: 4
        overview: The Lylat system has been invaded!  Join Fox McCloud and his Star
          Fox team as they fight to save the galaxy from the clutches of the...
        last_updated: 2018-08-11 15:01:11
        rating: E - Everyone
        coop: "No"
        youtube: jsEcmfPwnHo
        developers:
        - 6037
        genres:
        - 1
        - 8
        publishers:
        - 3
        alternates:
        - Lylat Wars (EU)
        - Lylat Wars
    Platform:
      required:
      - alias
      - console
      - controller
      - developer
      - icon
      - id
      - name
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        name:
          type: string
        alias:
          type: string
        icon:
          type: string
        console:
          type: string
        controller:
          type: string
        developer:
          type: string
        overview:
          type: string
      example:
        id: 25
        name: 3DO
        alias: 3do
        icon: 3do-1336524121.png
        console: 25.png
        controller: ""
        developer: The 3DO Company
    PlatformSkinny:
      required:
      - alias
      - id
      - name
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        name:
          type: string
        alias:
          type: string
      example:
        id: 3
        name: Nintendo 64
        alias: nintendo-64
    ImageBaseUrlMeta:
      required:
      - cropped_center_thumb
      - large
      - medium
      - original
      - small
      - thumb
      type: object
      properties:
        original:
          type: string
        small:
          type: string
        thumb:
          type: string
        cropped_center_thumb:
          type: string
        medium:
          type: string
        large:
          type: string
      example:
        original: https://cdn.thegamsdb.net/images/original/
        small: https://cdn.thegamsdb.net/images/small/
        thumb: https://cdn.thegamsdb.net/images/thumb/
        cropped_center_thumb: https://cdn.thegamsdb.net/images/cropped_center_thumb/
        medium: https://cdn.thegamsdb.net/images/medium/
        large: https://cdn.thegamsdb.net/images/large/
    PlatformImage:
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        type:
          type: string
        filename:
          type: string
      example:
        id: 72
        type: fanart
        filename: platform/fanart/12-1.jpg
    GameImage:
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        type:
          type: string
        side:
          type: string
        filename:
          type: string
        resolution:
          type: string
      example:
        id: 23413
        type: boxart
        side: front
        filename: boxart/front/1-1.jpg
        resolution: 1529x2156
    UpdateModel:
      type: object
      properties:
        edit_id:
          minimum: 0
          type: integer
        game_id:
          minimum: 0
          type: integer
        timestamp:
          type: string
        type:
          type: string
        value:
          type: string
      example:
        edit_id: 23159
        game_id: 60901
        timestamp: 2018-09-05 21:21:27
        type: boxart
        value: boxart/front/60901-1.jpg
    Developer:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        name:
          type: string
      example:
        id: 202
        name: Acclaim Studios Manchester
    Genre:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minimum: 0
          type: integer
        name:
          type: string
      example:
        id: 1
        name: Action
x-original-swagger-version: "2.0"
